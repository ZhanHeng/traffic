<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
    <!-- 指定由spring负责action对象的创建 -->
    <constant name="struts.objectFactory" value="spring" />
    <!-- 是否启用开发模式 -->
    <constant name="struts.devMode" value="true" />
    <!-- struts配置文件改动后，是aa否重新加载 -->
    <constant name="struts.configuration.xml.reload" value="true" />
    <!-- 设置浏览器是否缓存静态内容 -->
    <constant name="struts.serve.static.browserCache" value="false" />
    <!-- 请求参数的编码方式 -->
    <constant name="struts.i18n.encoding" value="utf-8" />
    <!-- 每次HTTP请求系统都重新加载资源文件，有助于开发 -->
    <constant name="struts.i18n.reload" value="true" />
    <!-- 文件上传最大值 -->
    <constant name="struts.multipart.maxSize" value="104857600" />
    <!-- 让struts2支持动态方法调用 -->
    <constant name="struts.enable.DynamicMethodInvocation" value="true" />
    <!-- 允许标签中使用表达式语法 -->
    <constant name="struts.tag.altSyntax" value="true" />
    <!-- 对于WebLogic,Orion,OC4J此属性应该设置成true -->
    <constant name="struts.dispatcher.parametersWorkaround" value="false" />


    <!-- 用于CRUD Action的parent package -->
    <!-- 基于paramsPrepareParamsStack, 增加store interceptor保证actionMessage在redirect后不会丢失 -->
<!--    <package name="crud-default" extends="convention-default">
        <interceptors>
            <interceptor-stack name="crudStack">
                <interceptor-ref name="store">
                    <param name="operationMode">AUTOMATIC</param>
                </interceptor-ref>
                <interceptor-ref name="paramsPrepareParamsStack" />
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="crudStack" />
    </package>-->


    <!-- 配置全局拦截器 -->
    <package name="all" extends="struts-default">
        <interceptors>
            <interceptor name="LoginInterceptor" class="com.traffic.Interceptor.LoginInterceptor"></interceptor>
            <interceptor-stack name="myStack">
                <interceptor-ref name="LoginInterceptor"/>
                <interceptor-ref name="defaultStack"/>     <!--必需引用这个，否则点下一个子ACTION会报错-->
            </interceptor-stack>
        </interceptors>
        <default-interceptor-ref name="myStack"></default-interceptor-ref>
        <!-- 定义全局处理结果 -->
        <global-results>
            <!-- 逻辑名为login的结果，映射到/login.jsp页面 -->
            <result name="login">/login.jsp</result>
            <result name="error">/error.jsp</result>
            <result name="expire">/expire.jsp</result>
        </global-results>
    </package>
    <!-- 使用Convention插件,实现约定大于配置的零配置文件风格. 特殊的Result路径在Action类中使用@Result设定. -->
<!--    <package name="newsandnotice" namespace="/"
             extends="struts-default,json-default">

        &lt;!&ndash; Action &ndash;&gt;
        <action name="home" class="RediretAction" method="showIndex">
            <result name="success" >${url}</result>
        </action>

        <action name="newsAndNoticeActionForMgr" class="NewsAndNoticeActionForMgr">
            <result name="beforeAddNewsAndNotice">/addNews.jsp</result>
            <result name="beforeEditNewsAndNotice">/edit.jsp</result>
            <result name="addNewsAndNotice">/addNews.jsp </result>
            <result name="deleteNewsAndNotice">/newsManage.jsp</result>
            <result name="updateNewsAndNotice">/newsManage.jsp</result>
            <result name="listNewsForPage">/newsManage.jsp	</result>
            <result name="listNoticeForPage">/newsManage.jsp</result>
            <result name="beforeAddInfo">/newsManage.jsp</result>
            <result name="queryForPage">/newsManage.jsp</result>
            <result name="success" type="redirectAction">home</result>
            <result type="json" />
        </action>

        <action name="upAction" class="NewsAndNoticeActionForMgr" method="uploadTest">
            <result name="uploadc" >/addNews.jsp</result>
        </action>
        <action name="loginAction" class="LoginAction" method="login">
            <result name="success">/adminMainPage.jsp</result>
            <result name="input">/adminLogin.jsp</result>
        </action>
        <action name="logout" class="LoginAction" method="logout">
            <result name="logout">/adminLogin.jsp</result>
        </action>

        <action name="loadCategory" class="LoadCategory">
            <result type="json" />
        </action>
        <action name="loadParentCategory" class="LoadParentCategory">
            <result type="json" />
        </action>
        <action name="loadSource" class="LoadSource">
            <result type="json" />
        </action>

        <action name="newsAndNoticeAction" class="NewsAndNoticeAction">
            &lt;!&ndash; 用户 &ndash;&gt;
            <result name="searchNewsList">
                /front-situation.jsp
            </result>
            <result name="showOneNewsAndNotice">
                /front-detail.jsp
            </result>
            <result type="json" />
        </action>
    </package>-->

    <package name="actions" extends="struts-default" namespace="/actions">
        <action name="ckeditorUpload" class="edu.neu.economic.newsandnotice.action.CkeditorUpload">
        </action>
    </package>
</struts>